/*       *      Copyright 2009 (c) Scott Penberthy, scottpenberthy.com. All Rights Reserved. *       *      This software is distributed under commercial and open source licenses. *      You may use the GPL open source license described below or you may acquire  *      a commercial license from scottpenberthy.com. You agree to be fully bound  *      by the terms of either license. Consult the LICENSE.TXT distributed with  *      this software for full details. *       *      This software is open source; you can redistribute it and/or modify it  *      under the terms of the GNU General Public License as published by the  *      Free Software Foundation; either version 2 of the License, or (at your  *      option) any later version. See the GNU General Public License for more  *      details at: http://scottpenberthy.com/legal/gplLicense.html *       *      This program is distributed WITHOUT ANY WARRANTY; without even the  *      implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  *       *      This GPL license does NOT permit incorporating this software into  *      proprietary programs. If you are unable to comply with the GPL, you must *      acquire a commercial license to use this software. Commercial licenses  *      for this software and support services are available by contacting *      scott.penberthy@gmail.com. * */package com.jsp.events{	public class LiqwidEvent extends GenericEvent	{				public static const PROGRESS:String = "progress";		public static const NEW_MEDIA:String = "new_media";		public static const METADATA:String = "metadata";		public static const MEDIA_COMPLETE:String = "media_complete";		public static const NOT_FOUND:String = "not_found";		public static const PRESET:String = "preset";		public static const CACHE_URL:String = "cache_url";		public static const MP3_LIST:String = "mp3_list";		public static const IMAGE_LIST:String = "image_list";				public function LiqwidEvent(type:String, eventData:Object=null, bubbles:Boolean=false, cancelable:Boolean=false)		{			super(type, eventData, bubbles, cancelable);		}			}}